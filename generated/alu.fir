circuit alu :
  module alu :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip op : UInt<10>, flip data1 : UInt<32>, flip data2 : UInt<32>, result : UInt<32>}

    wire result : UInt<32> @[combination circuit.scala 17:20]
    result <= UInt<1>("h0") @[combination circuit.scala 18:10]
    io.result <= result @[combination circuit.scala 19:14]
    node op_add = bits(io.op, 0, 0) @[combination circuit.scala 21:19]
    node op_sub = bits(io.op, 1, 1) @[combination circuit.scala 22:19]
    node op_slt = bits(io.op, 2, 2) @[combination circuit.scala 23:19]
    node op_sltu = bits(io.op, 3, 3) @[combination circuit.scala 24:19]
    node op_and = bits(io.op, 4, 4) @[combination circuit.scala 25:19]
    node op_or = bits(io.op, 5, 5) @[combination circuit.scala 26:19]
    node op_xor = bits(io.op, 6, 6) @[combination circuit.scala 27:19]
    node op_sll = bits(io.op, 7, 7) @[combination circuit.scala 28:19]
    node op_srl = bits(io.op, 8, 8) @[combination circuit.scala 29:19]
    node op_sra = bits(io.op, 9, 9) @[combination circuit.scala 30:19]
    node _adder_b_T = or(op_sub, op_slt) @[combination circuit.scala 33:32]
    node _adder_b_T_1 = or(_adder_b_T, op_sltu) @[combination circuit.scala 33:42]
    node _adder_b_T_2 = not(io.data2) @[combination circuit.scala 33:55]
    node adder_b = mux(_adder_b_T_1, _adder_b_T_2, io.data2) @[combination circuit.scala 33:24]
    node _adder_cin_T = or(op_sub, op_slt) @[combination circuit.scala 34:32]
    node _adder_cin_T_1 = or(_adder_cin_T, op_sltu) @[combination circuit.scala 34:42]
    node adder_cin = mux(_adder_cin_T_1, UInt<1>("h1"), UInt<1>("h0")) @[combination circuit.scala 34:24]
    wire adder_cout_result : UInt<33> @[combination circuit.scala 35:30]
    node _adder_cout_result_T = add(io.data1, adder_b) @[combination circuit.scala 36:32]
    node _adder_cout_result_T_1 = tail(_adder_cout_result_T, 1) @[combination circuit.scala 36:32]
    node _adder_cout_result_T_2 = add(_adder_cout_result_T_1, adder_cin) @[combination circuit.scala 36:42]
    node _adder_cout_result_T_3 = tail(_adder_cout_result_T_2, 1) @[combination circuit.scala 36:42]
    adder_cout_result <= _adder_cout_result_T_3 @[combination circuit.scala 36:21]
    node adder_cout = bits(adder_cout_result, 32, 32) @[combination circuit.scala 38:39]
    node add_sub_result = bits(adder_cout_result, 31, 0) @[combination circuit.scala 39:39]
    node _slt_result_T = bits(io.data1, 31, 31) @[combination circuit.scala 42:31]
    node _slt_result_T_1 = bits(io.data2, 31, 31) @[combination circuit.scala 42:45]
    node _slt_result_T_2 = not(_slt_result_T_1) @[combination circuit.scala 42:39]
    node _slt_result_T_3 = and(_slt_result_T, _slt_result_T_2) @[combination circuit.scala 42:36]
    node _slt_result_T_4 = bits(io.data1, 31, 31) @[combination circuit.scala 43:35]
    node _slt_result_T_5 = bits(io.data2, 31, 31) @[combination circuit.scala 43:49]
    node _slt_result_T_6 = eq(_slt_result_T_4, _slt_result_T_5) @[combination circuit.scala 43:40]
    node _slt_result_T_7 = bits(add_sub_result, 31, 31) @[combination circuit.scala 43:70]
    node _slt_result_T_8 = and(_slt_result_T_6, _slt_result_T_7) @[combination circuit.scala 43:55]
    node _slt_result_T_9 = or(_slt_result_T_3, _slt_result_T_8) @[combination circuit.scala 43:25]
    node slt_result = cat(UInt<31>("h0"), _slt_result_T_9) @[Cat.scala 31:58]
    node _sltu_result_T = not(adder_cout) @[combination circuit.scala 44:37]
    node sltu_result = cat(UInt<31>("h0"), _sltu_result_T) @[Cat.scala 31:58]
    node and_result = and(io.data1, io.data2) @[combination circuit.scala 45:26]
    node or_result = or(io.data1, io.data2) @[combination circuit.scala 46:26]
    node xor_result = xor(io.data1, io.data2) @[combination circuit.scala 47:26]
    node _sll_result_T = bits(io.data2, 4, 0) @[combination circuit.scala 48:34]
    node sll_result = dshl(io.data1, _sll_result_T) @[combination circuit.scala 48:26]
    node _data1_64_T = bits(io.data1, 31, 31) @[combination circuit.scala 49:45]
    node _data1_64_T_1 = and(op_sra, _data1_64_T) @[combination circuit.scala 49:38]
    node _data1_64_T_2 = bits(_data1_64_T_1, 0, 0) @[Bitwise.scala 74:15]
    node _data1_64_T_3 = mux(_data1_64_T_2, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 74:12]
    node data1_64 = cat(_data1_64_T_3, io.data1) @[Cat.scala 31:58]
    node _sr64_result_T = bits(io.data2, 4, 0) @[combination circuit.scala 50:37]
    node sr64_result = dshr(data1_64, _sr64_result_T) @[combination circuit.scala 50:29]
    node sr_result = bits(sr64_result, 31, 0) @[combination circuit.scala 51:32]
    node _T = eq(UInt<1>("h1"), io.op) @[combination circuit.scala 53:13]
    when _T : @[combination circuit.scala 53:13]
      result <= add_sub_result @[combination circuit.scala 54:20]
    else :
      node _T_1 = eq(UInt<2>("h2"), io.op) @[combination circuit.scala 53:13]
      when _T_1 : @[combination circuit.scala 53:13]
        result <= add_sub_result @[combination circuit.scala 55:20]
      else :
        node _T_2 = eq(UInt<3>("h4"), io.op) @[combination circuit.scala 53:13]
        when _T_2 : @[combination circuit.scala 53:13]
          result <= slt_result @[combination circuit.scala 56:20]
        else :
          node _T_3 = eq(UInt<4>("h8"), io.op) @[combination circuit.scala 53:13]
          when _T_3 : @[combination circuit.scala 53:13]
            result <= sltu_result @[combination circuit.scala 57:20]
          else :
            node _T_4 = eq(UInt<5>("h10"), io.op) @[combination circuit.scala 53:13]
            when _T_4 : @[combination circuit.scala 53:13]
              result <= and_result @[combination circuit.scala 58:21]
            else :
              node _T_5 = eq(UInt<6>("h20"), io.op) @[combination circuit.scala 53:13]
              when _T_5 : @[combination circuit.scala 53:13]
                result <= or_result @[combination circuit.scala 59:21]
              else :
                node _T_6 = eq(UInt<7>("h40"), io.op) @[combination circuit.scala 53:13]
                when _T_6 : @[combination circuit.scala 53:13]
                  result <= xor_result @[combination circuit.scala 60:21]
                else :
                  node _T_7 = eq(UInt<8>("h80"), io.op) @[combination circuit.scala 53:13]
                  when _T_7 : @[combination circuit.scala 53:13]
                    result <= sll_result @[combination circuit.scala 61:22]
                  else :
                    node _T_8 = eq(UInt<9>("h100"), io.op) @[combination circuit.scala 53:13]
                    when _T_8 : @[combination circuit.scala 53:13]
                      result <= sr_result @[combination circuit.scala 62:22]
                    else :
                      node _T_9 = eq(UInt<10>("h200"), io.op) @[combination circuit.scala 53:13]
                      when _T_9 : @[combination circuit.scala 53:13]
                        result <= sr_result @[combination circuit.scala 63:22]

